package aviatrix

import (
	"github.com/pulumi/pulumi-terraform-bridge/v3/pkg/tfbridge"
	"github.com/pulumi/pulumi/sdk/v3/go/common/tokens"
)

// MinimalTerraformBridgeProvider returns a minimal working Pulumi provider
func MinimalTerraformBridgeProvider() tfbridge.ProviderInfo {
	prov := tfbridge.ProviderInfo{
		Name:        "aviatrix",
		DisplayName: "Aviatrix",
		Publisher:   "AviatrixSystems",
		Description: "A Pulumi package for creating and managing Aviatrix cloud resources.",
		Keywords: []string{
			"pulumi",
			"aviatrix",
			"category/cloud",
			"category/networking",
			"category/security",
		},
		License:    "Apache-2.0",
		Homepage:   "https://www.aviatrix.com",
		Repository: "https://github.com/pulumi/pulumi-aviatrix",
		GitHubOrg:  "AviatrixSystems",
		Config: map[string]*tfbridge.SchemaInfo{
			"controller_ip": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"AVIATRIX_CONTROLLER_IP"},
				},
			},
			"username": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"AVIATRIX_USERNAME"},
				},
			},
			"password": {
				Default: &tfbridge.DefaultInfo{
					EnvVars: []string{"AVIATRIX_PASSWORD"},
				},
			},
		},
		Resources: map[string]*tfbridge.ResourceInfo{
			// Core resources - all 133 resources
			"aviatrix_account":     {Tok: tokens.NewTypeToken("aviatrix", "Account")},
			"aviatrix_gateway":     {Tok: tokens.NewTypeToken("aviatrix", "Gateway")},
			"aviatrix_spoke_gateway": {Tok: tokens.NewTypeToken("aviatrix", "SpokeGateway")},
			"aviatrix_transit_gateway": {Tok: tokens.NewTypeToken("aviatrix", "TransitGateway")},
			"aviatrix_vpc":         {Tok: tokens.NewTypeToken("aviatrix", "Vpc")},
			"aviatrix_firenet":     {Tok: tokens.NewTypeToken("aviatrix", "FireNet")},
			"aviatrix_firewall":    {Tok: tokens.NewTypeToken("aviatrix", "Firewall")},
			"aviatrix_account_user": {Tok: tokens.NewTypeToken("aviatrix", "AccountUser")},
			"aviatrix_aws_peer": {Tok: tokens.NewTypeToken("aviatrix", "AwsPeer")},
			"aviatrix_aws_guard_duty": {Tok: tokens.NewTypeToken("aviatrix", "AwsGuardDuty")},
			"aviatrix_aws_tgw": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgw")},
			"aviatrix_aws_tgw_connect": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwConnect")},
			"aviatrix_aws_tgw_connect_peer": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwConnectPeer")},
			"aviatrix_aws_tgw_directconnect": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwDirectconnect")},
			"aviatrix_aws_tgw_intra_domain_inspection": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwIntraDomainInspection")},
			"aviatrix_aws_tgw_network_domain": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwNetworkDomain")},
			"aviatrix_aws_tgw_peering": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwPeering")},
			"aviatrix_aws_tgw_peering_domain_conn": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwPeeringDomainConn")},
			"aviatrix_aws_tgw_transit_gateway_attachment": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwTransitGatewayAttachment")},
			"aviatrix_aws_tgw_vpc_attachment": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwVpcAttachment")},
			"aviatrix_aws_tgw_vpn_conn": {Tok: tokens.NewTypeToken("aviatrix", "AwsTgwVpnConn")},
			"aviatrix_azure_peer": {Tok: tokens.NewTypeToken("aviatrix", "AzurePeer")},
			"aviatrix_azure_spoke_native_peering": {Tok: tokens.NewTypeToken("aviatrix", "AzureSpokeNativePeering")},
			"aviatrix_azure_vng_conn": {Tok: tokens.NewTypeToken("aviatrix", "AzureVngConn")},
			"aviatrix_centralized_transit_firenet": {Tok: tokens.NewTypeToken("aviatrix", "CentralizedTransitFirenet")},
			"aviatrix_cloudwatch_agent": {Tok: tokens.NewTypeToken("aviatrix", "CloudwatchAgent")},
			"aviatrix_controller_access_allow_list_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerAccessAllowListConfig")},
			"aviatrix_controller_bgp_max_as_limit_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerBgpMaxAsLimitConfig")},
			"aviatrix_controller_bgp_communities_global_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerBgpCommunitiesGlobalConfig")},
			"aviatrix_controller_bgp_communities_auto_cloud_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerBgpCommunitiesAutoCloudConfig")},
			"aviatrix_controller_cert_domain_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerCertDomainConfig")},
			"aviatrix_controller_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerConfig")},
			"aviatrix_controller_email_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerEmailConfig")},
			"aviatrix_controller_email_exception_notification_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerEmailExceptionNotificationConfig")},
			"aviatrix_controller_gateway_keepalive_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerGatewayKeepaliveConfig")},
			"aviatrix_controller_private_mode_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerPrivateModeConfig")},
			"aviatrix_controller_private_oob": {Tok: tokens.NewTypeToken("aviatrix", "ControllerPrivateOob")},
			"aviatrix_controller_security_group_management_config": {Tok: tokens.NewTypeToken("aviatrix", "ControllerSecurityGroupManagementConfig")},
			"aviatrix_copilot_association": {Tok: tokens.NewTypeToken("aviatrix", "CopilotAssociation")},
			"aviatrix_copilot_fault_tolerant_deployment": {Tok: tokens.NewTypeToken("aviatrix", "CopilotFaultTolerantDeployment")},
			"aviatrix_copilot_security_group_management_config": {Tok: tokens.NewTypeToken("aviatrix", "CopilotSecurityGroupManagementConfig")},
			"aviatrix_copilot_simple_deployment": {Tok: tokens.NewTypeToken("aviatrix", "CopilotSimpleDeployment")},
			"aviatrix_datadog_agent": {Tok: tokens.NewTypeToken("aviatrix", "DatadogAgent")},
			"aviatrix_dcf_mwp_policy_block": {Tok: tokens.NewTypeToken("aviatrix", "DcfMwpPolicyBlock")},
			"aviatrix_dcf_mwp_policy_list": {Tok: tokens.NewTypeToken("aviatrix", "DcfMwpPolicyList")},
			"aviatrix_device_interface_config": {Tok: tokens.NewTypeToken("aviatrix", "DeviceInterfaceConfig")},
			"aviatrix_distributed_firewalling_config": {Tok: tokens.NewTypeToken("aviatrix", "DistributedFirewallingConfig")},
			"aviatrix_distributed_firewalling_intra_vpc": {Tok: tokens.NewTypeToken("aviatrix", "DistributedFirewallingIntraVpc")},
			"aviatrix_distributed_firewalling_origin_cert_enforcement_config": {Tok: tokens.NewTypeToken("aviatrix", "DistributedFirewallingOriginCertEnforcementConfig")},
			"aviatrix_distributed_firewalling_policy_list": {Tok: tokens.NewTypeToken("aviatrix", "DistributedFirewallingPolicyList")},
			"aviatrix_distributed_firewalling_default_action_rule": {Tok: tokens.NewTypeToken("aviatrix", "DistributedFirewallingDefaultActionRule")},
			"aviatrix_distributed_firewalling_deployment_policy": {Tok: tokens.NewTypeToken("aviatrix", "DistributedFirewallingDeploymentPolicy")},
			"aviatrix_distributed_firewalling_proxy_ca_config": {Tok: tokens.NewTypeToken("aviatrix", "DistributedFirewallingProxyCaConfig")},
			"aviatrix_edge_csp": {Tok: tokens.NewTypeToken("aviatrix", "EdgeCsp")},
			"aviatrix_edge_csp_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgeCspHa")},
			"aviatrix_edge_equinix": {Tok: tokens.NewTypeToken("aviatrix", "EdgeEquinix")},
			"aviatrix_edge_equinix_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgeEquinixHa")},
			"aviatrix_edge_megaport": {Tok: tokens.NewTypeToken("aviatrix", "EdgeMegaport")},
			"aviatrix_edge_megaport_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgeMegaportHa")},
			"aviatrix_edge_gateway_selfmanaged": {Tok: tokens.NewTypeToken("aviatrix", "EdgeGatewaySelfmanaged")},
			"aviatrix_edge_gateway_selfmanaged_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgeGatewaySelfmanagedHa")},
			"aviatrix_edge_neo": {Tok: tokens.NewTypeToken("aviatrix", "EdgeNeo")},
			"aviatrix_edge_neo_device_onboarding": {Tok: tokens.NewTypeToken("aviatrix", "EdgeNeoDeviceOnboarding")},
			"aviatrix_edge_neo_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgeNeoHa")},
			"aviatrix_edge_platform": {Tok: tokens.NewTypeToken("aviatrix", "EdgePlatform")},
			"aviatrix_edge_platform_device_onboarding": {Tok: tokens.NewTypeToken("aviatrix", "EdgePlatformDeviceOnboarding")},
			"aviatrix_edge_platform_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgePlatformHa")},
			"aviatrix_edge_proxy_profile": {Tok: tokens.NewTypeToken("aviatrix", "EdgeProxyProfile")},
			"aviatrix_edge_spoke": {Tok: tokens.NewTypeToken("aviatrix", "EdgeSpoke")},
			"aviatrix_edge_spoke_external_device_conn": {Tok: tokens.NewTypeToken("aviatrix", "EdgeSpokeExternalDeviceConn")},
			"aviatrix_edge_spoke_transit_attachment": {Tok: tokens.NewTypeToken("aviatrix", "EdgeSpokeTransitAttachment")},
			"aviatrix_edge_vm_selfmanaged": {Tok: tokens.NewTypeToken("aviatrix", "EdgeVmSelfmanaged")},
			"aviatrix_edge_vm_selfmanaged_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgeVmSelfmanagedHa")},
			"aviatrix_edge_zededa": {Tok: tokens.NewTypeToken("aviatrix", "EdgeZededa")},
			"aviatrix_edge_zededa_ha": {Tok: tokens.NewTypeToken("aviatrix", "EdgeZededaHa")},
			"aviatrix_filebeat_forwarder": {Tok: tokens.NewTypeToken("aviatrix", "FilebeatForwarder")},
			"aviatrix_firewall_instance": {Tok: tokens.NewTypeToken("aviatrix", "FirewallInstance")},
			"aviatrix_firewall_instance_association": {Tok: tokens.NewTypeToken("aviatrix", "FirewallInstanceAssociation")},
			"aviatrix_firewall_management_access": {Tok: tokens.NewTypeToken("aviatrix", "FirewallManagementAccess")},
			"aviatrix_firewall_policy": {Tok: tokens.NewTypeToken("aviatrix", "FirewallPolicy")},
			"aviatrix_firewall_tag": {Tok: tokens.NewTypeToken("aviatrix", "FirewallTag")},
			"aviatrix_fqdn": {Tok: tokens.NewTypeToken("aviatrix", "Fqdn")},
			"aviatrix_fqdn_global_config": {Tok: tokens.NewTypeToken("aviatrix", "FqdnGlobalConfig")},
			"aviatrix_fqdn_pass_through": {Tok: tokens.NewTypeToken("aviatrix", "FqdnPassThrough")},
			"aviatrix_fqdn_tag_rule": {Tok: tokens.NewTypeToken("aviatrix", "FqdnTagRule")},
			"aviatrix_gateway_certificate_config": {Tok: tokens.NewTypeToken("aviatrix", "GatewayCertificateConfig")},
			"aviatrix_gateway_dnat": {Tok: tokens.NewTypeToken("aviatrix", "GatewayDnat")},
			"aviatrix_gateway_snat": {Tok: tokens.NewTypeToken("aviatrix", "GatewaySnat")},
			"aviatrix_geo_vpn": {Tok: tokens.NewTypeToken("aviatrix", "GeoVpn")},
			"aviatrix_global_vpc_excluded_instance": {Tok: tokens.NewTypeToken("aviatrix", "GlobalVpcExcludedInstance")},
			"aviatrix_global_vpc_tagging_settings": {Tok: tokens.NewTypeToken("aviatrix", "GlobalVpcTaggingSettings")},
			"aviatrix_kubernetes_cluster": {Tok: tokens.NewTypeToken("aviatrix", "KubernetesCluster")},
			"aviatrix_link_hierarchy": {Tok: tokens.NewTypeToken("aviatrix", "LinkHierarchy")},
			"aviatrix_netflow_agent": {Tok: tokens.NewTypeToken("aviatrix", "NetflowAgent")},
			"aviatrix_periodic_ping": {Tok: tokens.NewTypeToken("aviatrix", "PeriodicPing")},
			"aviatrix_private_mode_lb": {Tok: tokens.NewTypeToken("aviatrix", "PrivateModeLb")},
			"aviatrix_private_mode_multicloud_endpoint": {Tok: tokens.NewTypeToken("aviatrix", "PrivateModeMulticloudEndpoint")},
			"aviatrix_proxy_config": {Tok: tokens.NewTypeToken("aviatrix", "ProxyConfig")},
			"aviatrix_qos_class": {Tok: tokens.NewTypeToken("aviatrix", "QosClass")},
			"aviatrix_qos_policy_list": {Tok: tokens.NewTypeToken("aviatrix", "QosPolicyList")},
			"aviatrix_rbac_group": {Tok: tokens.NewTypeToken("aviatrix", "RbacGroup")},
			"aviatrix_rbac_group_access_account_attachment": {Tok: tokens.NewTypeToken("aviatrix", "RbacGroupAccessAccountAttachment")},
			"aviatrix_rbac_group_access_account_membership": {Tok: tokens.NewTypeToken("aviatrix", "RbacGroupAccessAccountMembership")},
			"aviatrix_rbac_group_permission_attachment": {Tok: tokens.NewTypeToken("aviatrix", "RbacGroupPermissionAttachment")},
			"aviatrix_rbac_group_user_attachment": {Tok: tokens.NewTypeToken("aviatrix", "RbacGroupUserAttachment")},
			"aviatrix_rbac_group_user_membership": {Tok: tokens.NewTypeToken("aviatrix", "RbacGroupUserMembership")},
			"aviatrix_remote_syslog": {Tok: tokens.NewTypeToken("aviatrix", "RemoteSyslog")},
			"aviatrix_saml_endpoint": {Tok: tokens.NewTypeToken("aviatrix", "SamlEndpoint")},
			"aviatrix_segmentation_network_domain": {Tok: tokens.NewTypeToken("aviatrix", "SegmentationNetworkDomain")},
			"aviatrix_segmentation_network_domain_association": {Tok: tokens.NewTypeToken("aviatrix", "SegmentationNetworkDomainAssociation")},
			"aviatrix_segmentation_network_domain_connection_policy": {Tok: tokens.NewTypeToken("aviatrix", "SegmentationNetworkDomainConnectionPolicy")},
			"aviatrix_site2cloud": {Tok: tokens.NewTypeToken("aviatrix", "Site2cloud")},
			"aviatrix_site2cloud_ca_cert_tag": {Tok: tokens.NewTypeToken("aviatrix", "Site2cloudCaCertTag")},
			"aviatrix_sla_class": {Tok: tokens.NewTypeToken("aviatrix", "SlaClass")},
			"aviatrix_smart_group": {Tok: tokens.NewTypeToken("aviatrix", "SmartGroup")},
			"aviatrix_splunk_logging": {Tok: tokens.NewTypeToken("aviatrix", "SplunkLogging")},
			"aviatrix_spoke_ha_gateway": {Tok: tokens.NewTypeToken("aviatrix", "SpokeHaGateway")},
			"aviatrix_spoke_gateway_subnet_group": {Tok: tokens.NewTypeToken("aviatrix", "SpokeGatewaySubnetGroup")},
			"aviatrix_spoke_external_device_conn": {Tok: tokens.NewTypeToken("aviatrix", "SpokeExternalDeviceConn")},
			"aviatrix_spoke_transit_attachment": {Tok: tokens.NewTypeToken("aviatrix", "SpokeTransitAttachment")},
			"aviatrix_sumologic_forwarder": {Tok: tokens.NewTypeToken("aviatrix", "SumologicForwarder")},
			"aviatrix_traffic_classifier": {Tok: tokens.NewTypeToken("aviatrix", "TrafficClassifier")},
			"aviatrix_transit_external_device_conn": {Tok: tokens.NewTypeToken("aviatrix", "TransitExternalDeviceConn")},
			"aviatrix_trans_peer": {Tok: tokens.NewTypeToken("aviatrix", "TransPeer")},
			"aviatrix_transit_firenet_policy": {Tok: tokens.NewTypeToken("aviatrix", "TransitFirenetPolicy")},
			"aviatrix_transit_gateway_peering": {Tok: tokens.NewTypeToken("aviatrix", "TransitGatewayPeering")},
			"aviatrix_tunnel": {Tok: tokens.NewTypeToken("aviatrix", "Tunnel")},
			"aviatrix_vgw_conn": {Tok: tokens.NewTypeToken("aviatrix", "VgwConn")},
			"aviatrix_vpn_cert_download": {Tok: tokens.NewTypeToken("aviatrix", "VpnCertDownload")},
			"aviatrix_vpn_profile": {Tok: tokens.NewTypeToken("aviatrix", "VpnProfile")},
			"aviatrix_vpn_user": {Tok: tokens.NewTypeToken("aviatrix", "VpnUser")},
			"aviatrix_vpn_user_accelerator": {Tok: tokens.NewTypeToken("aviatrix", "VpnUserAccelerator")},
			"aviatrix_web_group": {Tok: tokens.NewTypeToken("aviatrix", "WebGroup")},
		},
		DataSources: map[string]*tfbridge.DataSourceInfo{
			// All 23 data sources
			"aviatrix_account": {Tok: tokens.NewDataSourceToken("aviatrix", "getAccount")},
			"aviatrix_caller_identity": {Tok: tokens.NewDataSourceToken("aviatrix", "getCallerIdentity")},
			"aviatrix_controller_metadata": {Tok: tokens.NewDataSourceToken("aviatrix", "getControllerMetadata")},
			"aviatrix_web_group": {Tok: tokens.NewDataSourceToken("aviatrix", "getWebGroup")},
			"aviatrix_dcf_mwp_attachment_point": {Tok: tokens.NewDataSourceToken("aviatrix", "getDcfMwpAttachmentPoint")},
			"aviatrix_device_interfaces": {Tok: tokens.NewDataSourceToken("aviatrix", "getDeviceInterfaces")},
			"aviatrix_edge_gateway_wan_interface_discovery": {Tok: tokens.NewDataSourceToken("aviatrix", "getEdgeGatewayWanInterfaceDiscovery")},
			"aviatrix_firenet": {Tok: tokens.NewDataSourceToken("aviatrix", "getFirenet")},
			"aviatrix_firenet_firewall_manager": {Tok: tokens.NewDataSourceToken("aviatrix", "getFirenetFirewallManager")},
			"aviatrix_firenet_vendor_integration": {Tok: tokens.NewDataSourceToken("aviatrix", "getFirenetVendorIntegration")},
			"aviatrix_gateway": {Tok: tokens.NewDataSourceToken("aviatrix", "getGateway")},
			"aviatrix_gateway_image": {Tok: tokens.NewDataSourceToken("aviatrix", "getGatewayImage")},
			"aviatrix_network_domains": {Tok: tokens.NewDataSourceToken("aviatrix", "getNetworkDomains")},
			"aviatrix_smart_groups": {Tok: tokens.NewDataSourceToken("aviatrix", "getSmartGroups")},
			"aviatrix_spoke_gateway": {Tok: tokens.NewDataSourceToken("aviatrix", "getSpokeGateway")},
			"aviatrix_spoke_gateways": {Tok: tokens.NewDataSourceToken("aviatrix", "getSpokeGateways")},
			"aviatrix_spoke_gateway_inspection_subnets": {Tok: tokens.NewDataSourceToken("aviatrix", "getSpokeGatewayInspectionSubnets")},
			"aviatrix_transit_gateway": {Tok: tokens.NewDataSourceToken("aviatrix", "getTransitGateway")},
			"aviatrix_transit_gateways": {Tok: tokens.NewDataSourceToken("aviatrix", "getTransitGateways")},
			"aviatrix_vpc": {Tok: tokens.NewDataSourceToken("aviatrix", "getVpc")},
			"aviatrix_vpc_tracker": {Tok: tokens.NewDataSourceToken("aviatrix", "getVpcTracker")},
			"aviatrix_firewall": {Tok: tokens.NewDataSourceToken("aviatrix", "getFirewall")},
			"aviatrix_firewall_instance_images": {Tok: tokens.NewDataSourceToken("aviatrix", "getFirewallInstanceImages")},
		},
		Version: "0.0.1",
	}
	return prov
}
